<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="CacheConfiguration" type="LandisGyr.Components.Caching.CacheConfigurationHandler, LandisGyr.Components.Caching" />
  </configSections>
    <runtime>
        <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
            <dependentAssembly>
                <assemblyIdentity name="System.Buffers" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0" />
            </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
            <dependentAssembly>
                <assemblyIdentity name="System.Runtime.CompilerServices.Unsafe" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
            </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
            <dependentAssembly>
                <assemblyIdentity name="System.Net.Http.Formatting" publicKeyToken="31bf3856ad364e35" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-5.2.7.0" newVersion="5.2.7.0" />
            </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
            <dependentAssembly>
                <assemblyIdentity name="System.Web.Http" publicKeyToken="31bf3856ad364e35" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-5.2.6.0" newVersion="5.2.6.0" />
            </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
            <dependentAssembly>
                <assemblyIdentity name="Microsoft.Bcl.AsyncInterfaces" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
            </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
            <dependentAssembly>
                <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-13.0.0.0" newVersion="13.0.0.0" />
            </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
            <dependentAssembly>
                <assemblyIdentity name="System.Composition.AttributedModel" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
            </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
            <dependentAssembly>
                <assemblyIdentity name="System.Memory" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-4.0.1.2" newVersion="4.0.1.2" />
            </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
            <dependentAssembly>
                <assemblyIdentity name="System.Text.Json" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-7.0.0.2" newVersion="7.0.0.2" />
            </dependentAssembly>
        </assemblyBinding>
        <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
            <dependentAssembly>
                <assemblyIdentity name="System.Threading.Channels" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
            </dependentAssembly>
        </assemblyBinding>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="CommonServiceLocator" publicKeyToken="489b6accfaf20ef0" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-2.0.4.0" newVersion="2.0.4.0" />
			</dependentAssembly>
		</assemblyBinding>
		<AppContextSwitchOverrides value="Switch.System.IO.UseLegacyPathHandling=true"/>
    </runtime>
	<startup>
		<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8"/>
	</startup>
  <CacheConfiguration>
    <!--Servers>
      <Server address="127.0.0.1" port="6379" />
    </Servers-->
    <Caches>
      <Cache name="SBSEndpointCache" type="None" ttl="14400" />
      <Cache name="SBSCollectorCache" type="None" ttl="14400" />
      <Cache name="SBSCommandLogCache" type="None" ttl="1800" />
      <Cache name="SBSNetworkMessageCache" type="Local" ttl="300" />
    </Caches>
  </CacheConfiguration>  
  
  
  <appSettings>
    <!-- Setting to determine whether to use Platform NAS-GND Converter or not -->
    <add key="UsePlatformGndConverter" value="%UsePlatformGndConverter%" />
    <add key="DASCallbackService" value="DASCallbackMessageListener" />
   
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
    <!--<add key="ApplicationNetworkSecurityServiceType" value="LandisGyr.NMS.SBS.Common.Security.TempSecurityMock"/>
    <add key="ApplicationNetworkSecurityAssemblyName" value="LandisGyr.NMS.SBS.Common"/>-->
    
    <!-- Controls if the SBS sends to the upper layer, any network registration events it receives
          for endpoints that it already has in its db.  For debugging and diagnostics, this is desirable.
          After deployment is running smoothly, you will probably want to set this to false, to prevent
          the CC from getting lots of network reg events for endpoints the SBS (and CC) already knows about.
        -->
    <add key="alwaysSendEndpointNetworkRegEvents" value="${NMSEventsProcessor_alwaysSendEndpointNetworkRegEvents}"/>

    <!-- Controls if the SBS sends to the upper layer, any network registration events it receives
          for collectors that it already has in its db.  For debugging and diagnostics, this is desirable.
          After deployment is running smoothly, you will probably want to set this to false, to prevent
          the CC from getting lots of network reg events for collectors the SBS (and CC) already knows about.
        -->
    <add key="alwaysSendCollectorAppNetworkRegEvents" value="false"/>

    <!-- Controls if the SBS sends to the upper layer, any comm delay events it receives
          for collectors from the NMS.  
        -->
    <add key="sendCollectorCommunicationDelayEvents" value="true"/>

    <!-- Controls if the SBS sends to the upper layer, any comm restore events it receives
          for collectors from the NMS.  
        -->
    <add key="sendCollectorCommunicationRestoreEvents" value="true"/>

    <!-- Controls the SBS collector cache type for this apppool.
         Valid values are: 
         None
         AppFabric (not supported yet)
         Local    (in this same apppool)
         Remote   (on this same box, just different apppool)
    -->
    <add key="CollectorCacheType" value="Local"  />

    <!-- Controls the SBS collector cache purge interval, in minutes.  This only is used in the apppool
         that has CollectorCacheType=InMemory  -->
    <add key="DBUpdateIntervalForLastCommInMinutes" value="1"  />

    <!-- Controls after how many minutes, since last communication from collector, a delay event is raised -->
    <add key="OutageThresholdWindowInMinutes" value="30"  />

    <!-- Controls after how many minutes, since last communication from endpoint, a delay event is raised -->
    <add key="EndpointOutageThresholdWindowInMinutes" value="${EndpointOutageThresholdWindowInMinutes}" />
    
    <!-- Controls the SBS endpoint cache type for this apppool.
         Valid values are: 
         None
         AppFabric (not supported yet)
         Local    (in this same apppool)
         Remote   (on this same box, just different apppool)
    -->
    <add key="endpointCacheType" value="None"/>

    <!-- Controls the SBS endpoint cache purge interval, in minutes.  This only is used in the apppool
         that has endpointCacheType=Local  -->
    <add key="endpointCachePurgeIntervalInMinutes" value="1"/>

    <!-- Controls if the SBS saves to the db an eventlog record for a network registration event, for a
          device that it already knows about and where the data hasn't changed.  
        -->
    <add key="saveEventLogForRegistrationEventForKnownUnchangedDevice" value="false"/>
    
    <!-- Controls whether the SBS should send topology update messages if 
         an endpoint switches collectors. -->
    <add key="sendTopologyUpdates" value="false" />

    <add key="collectorTopologySendPort" value="40004"></add>
    
    <add key="sendAckToCRFirstEnabled" value="${sendAckToCRFirstEnabled}"></add>
    <!-- Path to store poison queue messages-->
    <add key ="PoisonMessagePath" value="${LOGS_FOLDER}\Logs\${COMP_INSTALL_DIR_NAME}\"/>

    <!--Disable the Collector Comm restore event-->
    <add key="DetectCollectorCommRestore" value="true" />
    
    <!--The number of DB nodes-->
    <add key="NoOfDBInstances" value="1"/>
    <!--Setting to determine whether to use sharding or not-->
    <add key="UseSharding" value="false"/>
    <!--AdapterType for SBS-->
    <add key="AdapterType" value="%ADAPTERTYPE%"></add>
  
     <!--PreLoadCollectorCache is true when collector cache is needs to be loaded based on the collector serial number -->
    <add key="PreLoadCollectorCache" value="true"></add>
    <!-- Settings for HMAC -->
    <add key="MinCollectorVersionwithV2RPL" value="11.50"/>
    <add key="HMACVerificationRequired" value="true"/>
    <!--EnableDAPR is true when DA gsis messages from the collector-->
    <add key="EnableDAPR" value="%SBSENABLEDAPR%" />
    <add key="SupportTCP" value="%ENABLE_CRFWDL_REQUEST%" />

   </appSettings>
  <oracle.dataaccess.client>
    <settings>
      <add name="NumberTableVarray" value="udtMapping factoryName='LandisGyr.Data.Arrays.Oracle.NumberTableVarrayFactory,LG.Data.Oracle.PartialManaged,Culture=neutral, PublicKeyToken=null' typeName='NUMBERTABLEVARRAY' schemaName='%SBSDB%'" />
      <add name="IntegerTable" value="udtMapping factoryName='LandisGyr.Data.Arrays.Oracle.IntegerTableCollectionFactory,LG.Data.Oracle.PartialManaged,Culture=neutral, PublicKeyToken=null' typeName='INTEGERTABLE' schemaName='%SBSDB%'" />
      <add name="BigIntegerTable" value="udtMapping factoryName='LandisGyr.Data.Arrays.Oracle.BigIntegerTableCollectionFactory,LG.Data.Oracle.PartialManaged,Culture=neutral, PublicKeyToken=null' typeName='BIGINTEGERTABLE' schemaName='%SBSDB%'" />
      <add name="Varchar256Table" value="udtMapping factoryName='LandisGyr.Data.Arrays.Oracle.Varchar256TableCollectionFactory,LG.Data.Oracle.PartialManaged,Culture=neutral, PublicKeyToken=null' typeName='VARCHAR256TABLE' schemaName='%SBSDB%'" />
      <add name="Varchar30Table" value="udtMapping factoryName='LandisGyr.Data.Arrays.Oracle.Varchar30TableCollectionFactory,LG.Data.Oracle.PartialManaged,Culture=neutral, PublicKeyToken=null' typeName='VARCHAR30TABLE' schemaName='%SBSDB%'" />
      <add name="Varchar50Table" value="udtMapping factoryName='LandisGyr.Data.Arrays.Oracle.Varchar50TableCollectionFactory,LG.Data.Oracle.PartialManaged,Culture=neutral, PublicKeyToken=null' typeName='VARCHAR50TABLE' schemaName='%SBSDB%'" />
      <add name="VarcharTable" value="udtMapping factoryName='LandisGyr.Data.Arrays.Oracle.VarcharTableCollectionFactory,LG.Data.Oracle.PartialManaged,Culture=neutral, PublicKeyToken=null' typeName='VARCHARTABLE' schemaName='%SBSDB%'" />
      <add name="DateTable" value="udtMapping factoryName='LandisGyr.Data.Arrays.Oracle.DateTableCollectionFactory,LG.Data.Oracle.PartialManaged,Culture=neutral, PublicKeyToken=null' typeName='DATETABLE' schemaName='%SBSDB%'" />
    </settings>
  </oracle.dataaccess.client>
  <system.web>
    <compilation debug="true" targetFramework="4.8" />
    <httpRuntime targetFramework="4.8"/>
  </system.web>
  <system.serviceModel>
    <extensions>
      <!-- This extension is required if we are using the compression of messages that will go into queue #messageSizeReduction -->
      <bindingElementExtensions>
        <add name="gzipMessageEncoding" type="LandisGyr.ServiceModel.Channels.GZipMessageEncodingElement, LandisGyr.ServiceModel, Culture=neutral, PublicKeyToken=null" />
      </bindingElementExtensions>
    </extensions>
    <bindings>
      <netTcpBinding>
        <binding name="Application_IdentityManagementService_netTcpBinding" receiveTimeout="00:10:00" sendTimeout="00:00:30"
          hostNameComparisonMode="Exact" />
      </netTcpBinding>
      <basicHttpBinding>
        <binding name="ApplicationControlEventProcessor_HttpBinding"
          receiveTimeout="00:10:00" sendTimeout="00:05:00" allowCookies="true"
          hostNameComparisonMode="Exact" maxReceivedMessageSize="2147483647"
          useDefaultWebProxy="false">
          <security mode="%INSTALLER_SECURITY_MODE%">
            <transport clientCredentialType="None"/>
          </security>
        </binding>
        <binding name="GSS_INetworkSecurity_HttpBinding"
          receiveTimeout="00:05:00" sendTimeout="00:05:00" allowCookies="true"
          hostNameComparisonMode="Exact" maxReceivedMessageSize="2147483647"
          useDefaultWebProxy="false">
          <security mode="%INSTALLER_SECURITY_MODE%">
            <transport clientCredentialType="None"/>
          </security>
        </binding>
        <binding name="DLMS_ControlEventsListener_HttpBinding" receiveTimeout="00:10:00"
          sendTimeout="00:01:00" allowCookies="true" bypassProxyOnLocal="true"
          hostNameComparisonMode="Exact" maxReceivedMessageSize="2147483647"
          useDefaultWebProxy="false">
          <security mode="%INSTALLER_SECURITY_MODE%">
            <transport clientCredentialType="None"/>
          </security>
        </binding>
        <binding name="DLMS_IEndDeviceMessages_HttpBinding" receiveTimeout="00:10:00"
          sendTimeout="00:01:00" allowCookies="true" bypassProxyOnLocal="true"
          hostNameComparisonMode="Exact" maxReceivedMessageSize="2147483647"
          useDefaultWebProxy="false">
          <security mode="%INSTALLER_SECURITY_MODE%">
            <transport clientCredentialType="None"/>
          </security>
        </binding>
        <binding name="DLMS_IEndDeviceMessagesV2_HttpBinding" receiveTimeout="00:05:00"
          sendTimeout="00:05:00" allowCookies="true" bypassProxyOnLocal="true"
          hostNameComparisonMode="Exact" maxReceivedMessageSize="2147483647"
          useDefaultWebProxy="false">
          <security mode="%INSTALLER_SECURITY_MODE%">
            <transport clientCredentialType="None"/>
          </security>
        </binding>
        <binding name="SecurityEndDeviceMessages_HttpBinding"
                receiveTimeout="00:10:00" sendTimeout="00:00:30" allowCookies="true"
                hostNameComparisonMode="Exact" maxReceivedMessageSize="2147483647"
                useDefaultWebProxy="false">
          <security mode="%INSTALLER_SECURITY_MODE%">
            <transport clientCredentialType="None"/>
          </security>
        </binding>
      </basicHttpBinding>
      <netMsmqBinding>
        <binding name="NMSEventProcessor_MsmqBinding" closeTimeout="00:01:00"
          openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
          deadLetterQueue="Custom" durable="true" exactlyOnce="true"
          maxReceivedMessageSize="2147483647" maxRetryCycles="2" receiveErrorHandling="Move"
          receiveRetryCount="0" retryCycleDelay="00:05:00" timeToLive="1.00:00:00"
          useSourceJournal="false" useMsmqTracing="false" queueTransferProtocol="Native"
          maxBufferPoolSize="524288" useActiveDirectory="false" customDeadLetterQueue="net.msmq://localhost/private/%Instance%SBSInboundNMSEventsProcessor/NMSEventProcessorDL.svc">

          <readerQuotas maxDepth="2147483647"
                        maxStringContentLength="2147483647"
                        maxArrayLength="2147483647"
                        maxBytesPerRead="2147483647"
                        maxNameTableCharCount="2147483647" />
          <security mode="None">
          </security>
        </binding>

        <binding name="PoisonInboundMessageProcessor_MsmqBinding" closeTimeout="00:01:00"
      openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
      deadLetterQueue="Custom" durable="true" exactlyOnce="true"
      maxReceivedMessageSize="2147483647" maxRetryCycles="0" receiveErrorHandling="Fault"
      receiveRetryCount="0" retryCycleDelay="00:01:00" timeToLive="1.00:00:00"
      useSourceJournal="false" useMsmqTracing="false" queueTransferProtocol="Native"
      maxBufferPoolSize="524288" useActiveDirectory="false">

          <readerQuotas maxDepth="2147483647"
                        maxStringContentLength="2147483647"
                        maxArrayLength="2147483647"
                        maxBytesPerRead="2147483647"
                        maxNameTableCharCount="2147483647" />
          <security mode="None">
          </security>
        </binding>
          <!-- CollectorMessageProcessor_MsmqBinding-->
          <binding name="CollectorMessageProcessor_MsmqBinding" closeTimeout="00:01:00"
                   openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
                   deadLetterQueue="Custom" durable="true" exactlyOnce="true"
                   maxReceivedMessageSize="2147483647" maxRetryCycles="2" receiveErrorHandling="Move"
                   receiveRetryCount="0" retryCycleDelay="00:05:00" timeToLive="1.00:00:00"
                   useSourceJournal="false" useMsmqTracing="false" queueTransferProtocol="Native"
                   maxBufferPoolSize="524288" useActiveDirectory="false"
                   customDeadLetterQueue="net.msmq://localhost/private/%Instance%sbscollectormsgprocessor/InboundCollectorMessageProcessorDL.svc">

              <readerQuotas maxDepth="2147483647"
                            maxStringContentLength="2147483647"
                            maxArrayLength="2147483647"
                            maxBytesPerRead="2147483647"
                            maxNameTableCharCount="2147483647" />
              <security mode="None">
              </security>
          </binding>
          <!-- CollectorCommandProcessor_MsmqBinding-->
          <binding name="CollectorCommandProcessor_MsmqBinding" closeTimeout="00:01:00"
          openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
          deadLetterQueue="Custom" durable="true" exactlyOnce="true"
          maxReceivedMessageSize="2147483647" maxRetryCycles="2" receiveErrorHandling="Move"
          receiveRetryCount="0" retryCycleDelay="00:05:00" timeToLive="1.00:00:00"
          useSourceJournal="false" useMsmqTracing="false" queueTransferProtocol="Native"
          maxBufferPoolSize="524288" useActiveDirectory="false"
          customDeadLetterQueue="net.msmq://localhost/private/%Instance%sbsoutboundmessageprocessor/CollectorCommandProcessorDL.svc">


              <readerQuotas maxDepth="2147483647"
                                          maxStringContentLength="2147483647"
                                          maxArrayLength="2147483647"
                                          maxBytesPerRead="2147483647"
                                          maxNameTableCharCount="2147483647" />
              <security mode="None">
              </security>
          </binding>
      
        <binding name="NetMsmqBinding_CollectorCommunicationProcessor" closeTimeout="00:01:00"
						 openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
						 deadLetterQueue="Custom" durable="true" exactlyOnce="true"
						 maxReceivedMessageSize="2147483647" maxRetryCycles="2" receiveErrorHandling="Move"
						 receiveRetryCount="0" retryCycleDelay="00:05:00" timeToLive="1.00:00:00"
						 useSourceJournal="false" useMsmqTracing="false" queueTransferProtocol="Native"
						 maxBufferPoolSize="524288" useActiveDirectory="false"
             customDeadLetterQueue="net.msmq://localhost/private/%Instance%SBSInboundNetworkCommunicationProcessor/CollectorCommunicationServiceDL" 
               >
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <security mode="None" />
        </binding>

        <binding name="NetMsmqBinding_NetworkDeviceCommunicationProcessor" closeTimeout="00:01:00"
						 openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
						 deadLetterQueue="Custom" durable="true" exactlyOnce="true"
						 maxReceivedMessageSize="2147483647" maxRetryCycles="2" receiveErrorHandling="Move"
						 receiveRetryCount="0" retryCycleDelay="00:05:00" timeToLive="1.00:00:00"
						 useSourceJournal="false" useMsmqTracing="false" queueTransferProtocol="Native"
						 maxBufferPoolSize="524288" useActiveDirectory="false"
             customDeadLetterQueue="net.msmq://localhost/private/%Instance%SBSInboundNetworkCommunicationProcessor/NetworkDeviceCommunicationServiceDL">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <security mode="None" />
        </binding>
      </netMsmqBinding>
      <customBinding>
        <!-- Add Bindings for command response, push data and firmware download push data using the gzip encoding. All queue based bindings specified above will go here #messageSizeReduction -->
        <binding name="NMSEventProcessor_sbsnmsevents_MsmqBinding_Compressed" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" closeTimeout="00:01:00">
          <gzipMessageEncoding innerMessageEncoding="binaryMessageEncoding">
            <readerQuotas maxDepth="2147483647"
                       maxStringContentLength="2147483647"
                       maxArrayLength="2147483647"
                       maxBytesPerRead="2147483647"
                       maxNameTableCharCount="2147483647" />
          </gzipMessageEncoding>
          <msmqTransport maxReceivedMessageSize="2147483647" maxBufferPoolSize="2147483647" deadLetterQueue="Custom" queueTransferProtocol="Native" maxRetryCycles="2" retryCycleDelay="00:05:00" durable="true" exactlyOnce="true" receiveErrorHandling="Move"
           customDeadLetterQueue="net.msmq://localhost/private/%Instance%SBSInboundNMSEventsProcessor/NMSEventProcessorDL.svc">
            <msmqTransportSecurity msmqAuthenticationMode="None" msmqProtectionLevel="None" />
          </msmqTransport>
        </binding>
        <binding name="PoisonNMSEventProcessor_sbsnmsevents_MsmqBinding_Compressed" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" closeTimeout="00:01:00">
          <gzipMessageEncoding innerMessageEncoding="binaryMessageEncoding">
            <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          </gzipMessageEncoding>
          <msmqTransport maxReceivedMessageSize="4194304" maxBufferPoolSize="4194304" queueTransferProtocol="Native" durable="true" exactlyOnce="true" receiveErrorHandling="Drop">
            <msmqTransportSecurity msmqAuthenticationMode="None" msmqProtectionLevel="None" />
          </msmqTransport>
        </binding>
      </customBinding>
      <netNamedPipeBinding>
        <binding name="NMSEventProcessor_NamedPipeBinding" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" receiveTimeout="00:05:00" sendTimeout="00:05:00" >
          <readerQuotas maxDepth="2147483647"
                        maxStringContentLength="2147483647"
                       maxArrayLength="2147483647"
                        maxBytesPerRead="2147483647"
                        maxNameTableCharCount="2147483647" />
          <security mode="None">
            <transport protectionLevel="None"/>
          </security>
        </binding>
        <binding name="IControlEvents_NamedPipeBinding" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" receiveTimeout="00:05:00" sendTimeout="00:05:00" >
          <readerQuotas maxDepth="2147483647"
                        maxStringContentLength="2147483647"
                        maxArrayLength="2147483647"
                        maxBytesPerRead="2147483647"
                        maxNameTableCharCount="2147483647" />
          <security mode="None">
            <transport protectionLevel="None"/>
          </security>
        </binding>
        <binding name="IEndDeviceMessagesV2_NamedPipeBinding" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" receiveTimeout="00:05:00" sendTimeout="00:05:00" >
          <readerQuotas maxDepth="2147483647"
                        maxStringContentLength="2147483647"
                        maxArrayLength="2147483647"
                        maxBytesPerRead="2147483647"
                        maxNameTableCharCount="2147483647" />
          <security mode="None">
            <transport protectionLevel="None"/>
          </security>
        </binding>
      </netNamedPipeBinding>

    </bindings>
    <services>

      <service behaviorConfiguration="NMSEventProcessor_Behavior" name="LandisGyr.NMS.SBS.InboundServices.NMSEventProcessor.NMSEventProcessor">
        <endpoint name="NMSEventProcessor_sbsnmsevents" address="net.msmq://localhost/private/%Instance%SBSInboundNMSEventsProcessor/NMSEventProcessor.svc"
          binding="customBinding" bindingConfiguration="NMSEventProcessor_sbsnmsevents_MsmqBinding_Compressed"
          contract="LandisGyr.NMS.SBS.Contracts.NMSEventProcessor.INMSEventProcessor" />
      
        <endpoint name="SBSNMSEvents_NamedPipe" address="net.pipe://localhost/%Instance%SBSInboundNMSEventsProcessor/NMSEventProcessor.svc/SBSNMSEvents_NamedPipe"
          binding="netNamedPipeBinding" bindingConfiguration="NMSEventProcessor_NamedPipeBinding"
          contract="LandisGyr.NMS.SBS.Contracts.NMSEventProcessor.INMSEventProcessor" />
      </service>

      <service behaviorConfiguration="EndpointCacheRemoteAccess_Behavior"  name="LandisGyr.NMS.SBS.Repository.Endpoint.EndpointCacheRemoteAccess">

          <endpoint address="net.pipe://localhost/%Instance%SBSInboundNMSEventsProcessor/EndpointCacheProcessor.svc"
  binding="netNamedPipeBinding" bindingConfiguration="NMSEventProcessor_NamedPipeBinding"
  contract="LandisGyr.NMS.SBS.Repository.Contracts.Endpoint.IEndpointCacheRemoteAccess" />
        
      </service>

      <service behaviorConfiguration="PoisonHandlerBehavior" name="LandisGyr.NMS.SBS.InboundServices.NMSEventProcessor.PoisonNMSEventProcessor">

        <endpoint address="net.msmq://localhost/private/%Instance%SBSInboundNMSEventsProcessor/NMSEventProcessor.svc;poison"
          binding="customBinding" bindingConfiguration="PoisonNMSEventProcessor_sbsnmsevents_MsmqBinding_Compressed"
          contract="LandisGyr.NMS.SBS.Contracts.NMSEventProcessor.INMSEventProcessor" />

      </service>

    </services>
    <client>
      <!-- ============================================================================================== -->
      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%:%CC_App_Server_Port%/ApplicationService%VirtualInstance%/ControlEvent.svc"
			  binding="basicHttpBinding" bindingConfiguration="ApplicationControlEventProcessor_HttpBinding"
			  contract="LandisGyr.AMI.Layers.Control.IControlEvents" name="ApplicationControlEvents" />

      <endpoint address="net.pipe://localhost/PlatformGNDConverter/%Instance%ControlEventsService/ControlEventsService_NamedPipe"
			  binding="netNamedPipeBinding" bindingConfiguration="IControlEvents_NamedPipeBinding"
			  contract="LandisGyr.AMI.Layers.Control.IControlEvents" name="PlatformGNDConverterControlEventsService" />
      <!-- ============================================================================================== -->
      
      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%:%CC_App_Server_Port%/ApplicationService%VirtualInstance%/ControlEvent.svc"
        binding="basicHttpBinding" bindingConfiguration="ApplicationControlEventProcessor_HttpBinding"
        contract="LandisGyr.AMI.Layers.Control.IControlEvents" name="ApplicationControlEvents0" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%:%CC_App_Server_Port%/ApplicationService%VirtualInstance%/SBSCollectorMessages.svc"
          binding="basicHttpBinding"
          bindingConfiguration="ApplicationControlEventProcessor_HttpBinding"
          contract="LandisGyr.AMI.Network.INetworkCollectorMessages"
          name="SBSCollectorMessagesHandler" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%:%CC_App_Server_Port%/ApplicationService%VirtualInstance%/SBSCollectorMessages.svc"
          binding="basicHttpBinding"
          bindingConfiguration="ApplicationControlEventProcessor_HttpBinding"
          contract="LandisGyr.AMI.Network.INetworkCollectorMessages"
          name="SBSCollectorMessagesHandler0" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%/GsDlmsServices%Instance%/NPL/ControlEventsListener.svc"
        binding="basicHttpBinding" bindingConfiguration="DLMS_ControlEventsListener_HttpBinding"
        contract="LandisGyr.AMI.Layers.Control.IControlEvents" name="DefaultControlEvents" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%/%EDPLSERVICE%/NPL/ControlEventsListener.svc"
  binding="basicHttpBinding" bindingConfiguration="DLMS_ControlEventsListener_HttpBinding"
  contract="LandisGyr.AMI.Layers.Control.IControlEvents" name="DefaultUpperLayerControlEvents" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%/%EDPLSERVICE%/NPL/ControlEventsListener.svc"
  binding="basicHttpBinding" bindingConfiguration="DLMS_ControlEventsListener_HttpBinding"
  contract="LandisGyr.AMI.Layers.Control.IControlEvents" name="DefaultUpperLayerControlEvents0" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%/GsDlmsServices%Instance%/NPL/EndDeviceMessagesListener.svc"
                binding="basicHttpBinding" bindingConfiguration="DLMS_IEndDeviceMessages_HttpBinding"
                contract="LandisGyr.AMI.Network.IEndDeviceMessages" name="DefaultDeviceMessages" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%/GsDlmsServices%Instance%/NPL/EndDeviceMessagesListener.svc"
                binding="basicHttpBinding" bindingConfiguration="DLMS_IEndDeviceMessages_HttpBinding"
                contract="LandisGyr.AMI.Network.IEndDeviceMessages" name="DefaultDeviceMessages0" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%/GsDlmsPushDataMessageListener%Instance%/EndDeviceMessagesV2Listener.svc"
                binding="basicHttpBinding" bindingConfiguration="DLMS_IEndDeviceMessagesV2_HttpBinding"
                contract="LandisGyr.AMI.Network.V2.IEndDeviceMessagesV2" name="DefaultDeviceMessagesV2" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%/GsDlmsPushDataMessageListener%Instance%/EndDeviceMessagesV2Listener.svc"
                binding="basicHttpBinding" bindingConfiguration="DLMS_IEndDeviceMessagesV2_HttpBinding"
                contract="LandisGyr.AMI.Network.V2.IEndDeviceMessagesV2" name="DefaultDeviceMessagesV20" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%/GsDlmsPushDataMessageListener%Instance%/EndDeviceMessagesV2Listener.svc"
                binding="basicHttpBinding" bindingConfiguration="DLMS_IEndDeviceMessagesV2_HttpBinding"
                contract="LandisGyr.AMI.Network.V2.IEndDeviceMessagesV2" name="GridstreamDlmsServiceV2" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%/GsDlmsPushDataMessageListener%Instance%/EndDeviceMessagesV2Listener.svc"
                binding="basicHttpBinding" bindingConfiguration="DLMS_IEndDeviceMessagesV2_HttpBinding"
                contract="LandisGyr.AMI.Network.V2.IEndDeviceMessagesV2" name="GridstreamDlmsServiceV20" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%:%CC_App_Server_Port%/Webservice%VirtualInstance%/IdentityManagementService.svc"
        binding="basicHttpBinding" bindingConfiguration="DLMS_IEndDeviceMessages_HttpBinding"
        contract="LandisGyr.AMI.Layers.IIdentityManagement" name="ApplicationIdentityManagement" />

      

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%:%CC_App_Server_Port%/GridstreamSecurityServiceHost%VirtualInstance%/NetworkSecurityService.svc"
        binding="basicHttpBinding" bindingConfiguration="GSS_INetworkSecurity_HttpBinding"
        contract="LandisGyr.AMI.Security.Common.Services.INetworkSecurityService" name="ApplicationNetworkSecurity" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%:%CC_App_Server_Port%/GridstreamSecurityServiceHost%VirtualInstance%/NetworkSecurityService.svc"
        binding="basicHttpBinding" bindingConfiguration="GSS_INetworkSecurity_HttpBinding"
        contract="LandisGyr.AMI.Security.Common.Services.INetworkSecurityService" name="ApplicationNetworkSecurity0" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%:%CC_App_Server_Port%/EventListener/AnsiControlEvents.svc"
        binding="basicHttpBinding" bindingConfiguration="ApplicationControlEventProcessor_HttpBinding"
        contract="LandisGyr.AMI.Layers.Control.IControlEvents" name="AnsiControlEvents" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%:%CC_App_Server_Port%/EventListener/AnsiEndDeviceMessages.svc"
        binding="basicHttpBinding" bindingConfiguration="DLMS_IEndDeviceMessages_HttpBinding"
        contract="LandisGyr.AMI.Network.IEndDeviceMessages" name="AnsiEndDeviceMessages" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%:%CC_App_Server_Port%/EventListener/AnsiEndDeviceMessages.svc"
              binding="basicHttpBinding" bindingConfiguration="DLMS_IEndDeviceMessages_HttpBinding"
              contract="LandisGyr.AMI.Network.V2.IEndDeviceMessagesV2"
              name="AnsiEndDeviceMessagesV2" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%:%INSTALLER_ANSIServer_PORT%/%Instance%ANSIInboundMessageHandler/EndDeviceMessagesHandler.svc"
        binding="basicHttpBinding" bindingConfiguration="DLMS_IEndDeviceMessages_HttpBinding"
        contract="LandisGyr.AMI.Network.IEndDeviceMessages"
        name="DASCallbackMessageListener" />

      <!-- ============================================================================================== -->
      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%:%INSTALLER_ANSIServer_PORT%/%Instance%ANSIInboundMessageHandler/EndDeviceMessagesHandler.svc"
        binding="basicHttpBinding" bindingConfiguration="DLMS_IEndDeviceMessages_HttpBinding"
        contract="LandisGyr.AMI.Network.V2.IEndDeviceMessagesV2"
        name="DASCallbackMessageListenerV2" />

      <endpoint address="net.pipe://localhost/PlatformGNDConverter/%Instance%EndDeviceMessagesV2Service/EndDeviceMessagesV2Service_NamedPipe"
        binding="netNamedPipeBinding" bindingConfiguration="IEndDeviceMessagesV2_NamedPipeBinding"
        contract="LandisGyr.AMI.Network.V2.IEndDeviceMessagesV2"
        name="PlatformGNDConverterEndDeviceMessagesV2Service" />
      <!-- ============================================================================================== -->
      
      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%:%CC_App_Server_Port%/GridstreamSecurityServiceHost%VirtualInstance%/SecurityEndDeviceMessages.svc"
        binding="basicHttpBinding" bindingConfiguration="SecurityEndDeviceMessages_HttpBinding"
        contract="LandisGyr.AMI.Network.IEndDeviceMessages" name="SecurityEndDeviceMessages" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%:%CC_App_Server_Port%/GridstreamSecurityServiceHost%VirtualInstance%/SecurityEndDeviceMessagesV2.svc"
        binding="basicHttpBinding" bindingConfiguration="SecurityEndDeviceMessages_HttpBinding"
        contract="LandisGyr.AMI.Network.V2.IEndDeviceMessagesV2" name="SecurityDeviceMessagesV2" />

      <endpoint address="%INSTALLER_HTTP_PROTOCOL%://%CCAPPSERVER%:%CC_App_Server_Port%/GridstreamSecurityServiceHost%VirtualInstance%/SecurityEndDeviceMessagesV2.svc"
        binding="basicHttpBinding" bindingConfiguration="SecurityEndDeviceMessages_HttpBinding"
        contract="LandisGyr.AMI.Network.V2.IEndDeviceMessagesV2" name="SecurityDeviceMessagesV20" />

      <endpoint name="CollectorCommandProcessor"
          address="net.msmq://localhost/private/%Instance%sbsoutboundmessageprocessor/CollectorCommandProcessor.svc"
          binding="netMsmqBinding" bindingConfiguration="CollectorCommandProcessor_MsmqBinding"
          contract="LandisGyr.NMS.SBS.Contracts.OutboundCollectorCommandProcessor.ICollectorCommandProcessor"/>
      
      <endpoint address="net.msmq://localhost/private/%Instance%SBSInboundNetworkCommunicationProcessor/CollectorCommunicationService"
           binding="netMsmqBinding" bindingConfiguration="NetMsmqBinding_CollectorCommunicationProcessor"
           contract="LandisGyr.NMS.SBS.Contracts.CollectorCommunicationProcessor.ICollectorCommunicationProcessor" name="CollectorCommunicationUpdateService" />

      <endpoint address="net.msmq://localhost/private/%Instance%SBSInboundNetworkCommunicationProcessor/NetworkDeviceCommunicationService"
                     binding="netMsmqBinding" bindingConfiguration="NetMsmqBinding_NetworkDeviceCommunicationProcessor"
                     contract="LandisGyr.NMS.SBS.Contracts.NetworkDeviceCommunicationProcessor.INetworkDeviceCommunicationProcessor" name="NetworkDeviceCommunicationService" />
      
    </client>
   

    <serviceHostingEnvironment  multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>

</configuration>
